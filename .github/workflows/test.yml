name: CI/CD Pipeline

on:
  pull_request:
    branches: ['main', 'develop']
  push:
    branches: ['main', 'develop']

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  build-test:
    name: Build & Test & Quality
    runs-on: ubuntu-22.04
    env:
      DISCORD_TOKEN: dummy_token
      DISCORD_ALERT_CHANNEL_ID: dummy_alert_channel
      DISCORD_BAN_CHANNEL_ID: dummy_ban_channel
      NID_AUTH: dummy_auth
      NID_SESSION: dummy_session
      SUPABASE_URL: dummy_url
      SUPABASE_ANON_KEY: dummy_key
      SUPABASE_SERVICE_ROLE_KEY: dummy_service_key
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      # Quality checks BEFORE build (fail fast)
      - name: Check TypeScript
        run: npx tsc --noEmit -p config/tsconfig.json

      - name: Build Project
        run: npm run build

      - name: Run Tests
        id: test
        run: npm run test
        continue-on-error: true

      - name: Generate Test Coverage
        id: coverage
        run: npm run test:coverage
        continue-on-error: true

      # Upload coverage reports to Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: dot-mario/theburgers

      # Upload coverage artifacts (only for PRs and main branch)
      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: |
          always() && (
            github.event_name == 'pull_request' || 
            (github.event_name == 'push' && github.ref == 'refs/heads/main')
          )
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 7

      # Summary
      - name: Pipeline Summary
        if: always()
        run: |
          echo "## 🚀 CI/CD Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Build & Quality Checks" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependencies installed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TypeScript compilation passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Project built successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.test.outcome }}" == "success" ]; then
            echo "- ✅ All tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️ Some tests failed - check logs" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.coverage.outcome }}" == "success" ]; then
            echo "- 📊 Coverage report generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️ Coverage generation had issues" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Only show artifacts link when coverage was uploaded
          if [[ "${{ github.event_name }}" == "pull_request" || ("${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main") ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📦 Artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- [Coverage Reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          fi
